<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picCalor.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCAAoACgDASIAAhEBAxEB/8QA
        GwAAAgIDAQAAAAAAAAAAAAAAAAUDBgEEBwL/xAAsEAABAwMBBgUFAQAAAAAAAAABAAIDBBEhBQYSEzFB
        YRQjUXHRIkOBocGR/8QAGAEAAwEBAAAAAAAAAAAAAAAAAwUGAgT/xAAkEQACAgAFBAMBAAAAAAAAAAAB
        AgADBAURITESE0FhIjLw4f/aAAwDAQACEQMRAD8A7ik9XrrKOtmhnjJYwgBzTm9gevuo9pqiHwwjEvnR
        vDtwC/vf0wbqpEumeXvNyUmzLMjhyEr5/bGMMHgxcCz8R5S7SSRNmEvmOed5hN7MPx2+cMtP1yDwO/Vz
        Xla517NuSOY5YGD+lVOFhR3MTrjl1B5FKac3xFbDrOo/vM77MvpYfDYzpINxdCV6HqM9eJDKxgYywDmN
        IBPUZJQqyuxbFDrwYiZSpKmJtqjTuqiISRO1vm5wR0x/fx7JoSFbdpaZktI0tpONKXjLWguaBn4H5VQf
        HLC9zXxPYWmxa4C4wD091L5zQ63d3wfX7WOsutU19vzNu43VqzELHFwvLRxHOAe0FouQef8AiUb2HpWM
        NkGpll2VFYQC36aQEhwcR9Tuw6evdCZ6Npsunh/EqOIH2wBYDuhXWFqNVKoeR71kxc4ewsIzSmr0GnrK
        qWaoe9zZPt3sL2A/iEIzKrcjWDBI4iyn2blkEhnkLHsxEWnn3Pv6Jnp+iwMoxHWwxSyb5cTa47fqyEIV
        eGqqOqLpNvc7/YxqAAAByCEIR4Of/9k=
</value>
  </data>
  <data name="picFrio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCAAyADIDASIAAhEBAxEB/8QA
        HAAAAgIDAQEAAAAAAAAAAAAAAAUGCAIDBwEE/8QANBAAAgEDAgMFBQcFAAAAAAAAAQIDAAQRBSEHEjEG
        EyJRYQgUQUJxFyMyVaTB0hWDkZOh/8QAFwEAAwEAAAAAAAAAAAAAAAAAAAMEAv/EACERAAICAgAHAQAA
        AAAAAAAAAAACAQMRMRITITOB4fCh/9oADAMBAAIRAxEAPwBzoeitxSludf7R3V1/RPeHi07TYpDGjIpx
        zvjqSc+uQd8YFP8A7Iuwn5F+sn/nXnBVwnC7R3Y7KJyT/ekqU3F67GKNRJAzkkFgDkcpI8x1xWlSW0Yd
        4XZEZ+FXYKNTyaGrvzKvL79OMEkDfx+tYW3C3sFKGEmhKjq5Qr79OdwcbeOpJb80gt5ZU5o2lVg6nDKx
        YHB8xmtTgyG5e2j5UV2d5X3ZiDnbyGaoildE83tnP4Kfsi7CfkX6yf8AnS3WuGVrotrLq3YOa70rVbVD
        JHFHO0kc+N+RlYnOenXHpU2tr2VJJomWSbusEnAGPCCf3plDKs0ayIcqwyKQ9crsoSxX0ctsON2iNY27
        XkEy3JiUzBPwh8Dmx6ZzRVcaKwbLUcFjjhZpB5eba428/vpKe21yYGIgR5i2/dY5UjPoTvn6bUi4LZPC
        3SMHlOLjB8vvpKkVkkrM3ckxkbGQ+JJD6Z3z9NqfVjhnJPdniXBjbEgx28BwveITBKcMgDAnB+YVq5jb
        pJDcMfG7HuIt3YE/E/KP+1lFcNJcRy26Fl7xVaeQbkEgYUfKK1rI0jPNcIfA7AXEY8SgH5h8RVMROevv
        P3kmzGOnrH3jwZX0slzGO/WS3xv3eMpJ9SNwfrtTmyx7snKvLt08qWakZoowJszZ2518MaH1xvn67U0s
        wRboGIJx1FIt7cYH09yclIqKKKmKi1HBZBJwt0hG6MJwf90lSK4s54njnZ5J+7yFXbbwkA/5xUN4Tavb
        6LYTdjNYmjtNU0u4kSOOVuTv42YurLnrnmOw+GDXS+tbSyU0LeuH2IrSURRW0ErBAZFAVd2Zgw6+QzWP
        fJEl3FEwZGZlZH2ZCTjbzGfKmlxZI+ZIlVZQwYNj4g53rTa6cBzvcqjSM5fIHQk52qjmpMS0k3KeJhYP
        kt7aeeeeSN5IBIACCc58IB/fem1rD3ECx5zyjFbQABgVHe2va7Tuy2j3FxcXMXvndkW1qGBklkP4QF64
        zjJ+FIe2X6FFdUIU/orq1jwP1y5sreeS4gheWJXaKTIZCRkqfUdKKWNJz7QFlaP2Zhu2tYWuVl5FmMYL
        hcdObrj0quFFFABRRRQAV1b2frK1uu0sz3NtDM8UReNpIwxRvMZ6H1oooAsbRRRQB//Z
</value>
  </data>
</root>